<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.jetsetgo.dbio.MyPageMapper">

    <!-- 사용자 로그인 ID로 검색 -->
    <select id="findUserInfoByUserName" resultType="kr.co.jetsetgo.model.TbMembersDto">
        SELECT * FROM MEMBERS WHERE USERNAME = #{userName}
    </select>

    <!-- 사용자 정보  수정 -->
    <update id="editUserInfo">
        UPDATE MEMBERS SET PHONENUMBER = #{contact} WHERE USERNAME = #{id}
    </update>

    <!-- 사용자 비밀번호 수정 -->
    <update id="editUserPassword">
        UPDATE MEMBERS SET PASSWORD = #{password} WHERE USERNAME = #{id}
    </update>

    <!-- 사용자  삭제 -->
    <delete id="removeUser">
        DELETE FROM MEMBERS WHERE USERNAME = #{id}
    </delete>

    <!-- 예약 검색 -->
    <select id="findReservationByUserId" resultType="kr.co.jetsetgo.model.ReservationDto">
        SELECT
            r.MEMBER_ID,
            r.RESERVATION_ID,
            r.RESERVATION_DATE,
            r.num,
            r.STATUS,
            f.ID,
            f.ORIGINLOCATIONCODE,
            f.DESTINATIONLOCATIONCODE,
            f.DEPARTURE_CITY,
            f.ARRIVAL_CITY,
            f.DEPARTURE_TIME,
            f.ARRIVAL_TIME
        FROM
            RESERVATION r
                JOIN
            FLIGHTS f ON r.FLIGHT_ID = f.ID
        WHERE
            r.MEMBER_ID = #{userId}
          AND
                f.DEPARTURE_TIME = (
                SELECT MIN(f2.DEPARTURE_TIME)
                FROM FLIGHTS f2
                         JOIN RESERVATION r2 ON f2.ID = r2.FLIGHT_ID
                WHERE r2.RESERVATION_ID = r.RESERVATION_ID
            )
          AND
                r.num = (
                SELECT MIN(r3.num)
                FROM RESERVATION r3
                         JOIN FLIGHTS f3 ON r3.FLIGHT_ID = f3.ID
                WHERE r3.RESERVATION_ID = r.RESERVATION_ID
                  AND f3.DEPARTURE_TIME = f.DEPARTURE_TIME
            )
        ORDER BY
            r.RESERVATION_DATE DESC;
    </select>


    <!-- 예약 상세 검색 -->
    <select id="findReservationByReservationId" resultType="kr.co.jetsetgo.model.ReservationDetailDto">
        SELECT
            R.RESERVATION_ID,
            R.MEMBER_ID,
            R.FLIGHT_ID,
            M.NAME,
            M.PHONENUMBER,
            R.PASSENGER_NAME,
            R.PHONE_NUMBER,
            R.STATUS,
            R.TRIP_TYPE,
            R.RESERVATION_DATE,
            R.PASSPORT_NUMBER,
            R.PASSPORT_EXPIRYDATE,
            R.PASSPORT_ISSUINGCOUNTRY,
            R.PAYMENT_AMOUNT,
            R.PAYMENT_METHOD,
            R.NONSTOP,
            R.TRAVELCLASS,
            R.ADULTS,
            R.CHILDREN,
            F.DEPARTURE_TIME,
            F.ARRIVAL_TIME,
            F.ORIGINLOCATIONCODE,
            F.DESTINATIONLOCATIONCODE,
            F.DEPARTURE_CITY,
            F.ARRIVAL_CITY,
            TIMESTAMPDIFF(MINUTE, F.DEPARTURE_TIME, F.ARRIVAL_TIME) AS DURATIONINMINUTES
        FROM
            RESERVATION R
                JOIN
            MEMBERS M ON R.MEMBER_ID = M.MEMBERNUM
                JOIN
            FLIGHTS F ON R.FLIGHT_ID = F.ID
        WHERE
            R.RESERVATION_ID = #{id};
    </select>

    <!-- 예약 취소 상세 검색 -->
    <select id="findReservationByReservationIdAndFlightId" resultType="kr.co.jetsetgo.model.ReservationDetailDto">
        SELECT
            R.RESERVATION_ID,
            R.MEMBER_ID,
            R.FLIGHT_ID,
            M.NAME,
            M.PHONENUMBER,
            R.PASSENGER_NAME,
            R.PHONE_NUMBER,
            R.STATUS,
            R.TRIP_TYPE,
            R.RESERVATION_DATE,
            R.PASSPORT_NUMBER,
            R.PASSPORT_EXPIRYDATE,
            R.PASSPORT_ISSUINGCOUNTRY,
            R.PAYMENT_AMOUNT,
            R.PAYMENT_METHOD,
            R.NONSTOP,
            R.TRAVELCLASS,
            R.ADULTS,
            R.CHILDREN,
            F.DEPARTURE_TIME,
            F.ARRIVAL_TIME,
            F.ORIGINLOCATIONCODE,
            F.DESTINATIONLOCATIONCODE,
            F.DEPARTURE_CITY,
            F.ARRIVAL_CITY,
            TIMESTAMPDIFF(MINUTE, F.DEPARTURE_TIME, F.ARRIVAL_TIME) AS DURATIONINMINUTES
        FROM
            RESERVATION R
                JOIN
            MEMBERS M ON R.MEMBER_ID = M.MEMBERNUM
                JOIN
            FLIGHTS F ON R.FLIGHT_ID = F.ID
        WHERE
            R.RESERVATION_ID = #{id}
          AND R.FLIGHT_ID = #{flightId};
    </select>

    <!-- 여권 정보 업데이트 -->
    <update id="editPassport">
        UPDATE RESERVATION
        SET
            PASSPORT_NUMBER = #{passportNumber},
            PASSPORT_EXPIRYDATE = #{passportExpiryDate},
            PASSPORT_ISSUINGCOUNTRY = #{passportIssuingCountry}
        WHERE
            RESERVATION_ID = #{id}
          AND PASSENGER_NAME = #{passengerName}
          AND PHONE_NUMBER = #{phoneNumber}
    </update>

    <!-- 예약 취소 -->
    <update id="cancelReservation">
        UPDATE RESERVATION SET STATUS = '예약취소' WHERE RESERVATION_ID = #{id}
    </update>

    <!-- 항공편 도시명 가져오기(임시)  -->
    <select id="findFlightCityById" resultType="map">
        SELECT
            DEPARTURE_CITY,
            ARRIVAL_CITY
        FROM
            FLIGHTS
        WHERE
            ID = #{id}
    </select>

    <!-- 기존 DB에 항공편 유무 확인하기  -->
    <select id="findFlightId" resultType="string">
        SELECT
            ID
        FROM
            FLIGHTS
        WHERE
            DEPARTURE_TIME = #{departureTime}
          AND ARRIVAL_TIME = #{arrivalTime}
          AND ORIGINLOCATIONCODE = #{departure}
          AND DESTINATIONLOCATIONCODE = #{destination}
          AND DEPARTURE_CITY = #{departureCity}
          AND ARRIVAL_CITY = #{arrivalCity}
    </select>

    <!-- 항공편 추가하기  -->
    <insert id="addFlight">
        INSERT INTO FLIGHTS (DEPARTURE_TIME, ARRIVAL_TIME, ORIGINLOCATIONCODE, DESTINATIONLOCATIONCODE, DEPARTURE_CITY, ARRIVAL_CITY)
        VALUES (#{departureTime}, #{arrivalTime}, #{departure}, #{destination}, #{departureCity}, #{arrivalCity});
    </insert>


</mapper>